!function(){const e=e=>{throw(e=>{try{const t=JSON.parse(e.message);return new DOMException(t.msg,t.name)}catch(t){return new TypeError(`${t} when decoding "${e}"`)}})(e)},t=function(t,r){return window.webkit.messageHandlers.bluetooth.postMessage({action:t,data:r}).catch(e)};function r(e,t,r,i){if("a"===r&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?i:"a"===r?i.call(e):i?i.value:t.get(e)}function i(e,t,r,i,a){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?a.call(e,r):a?a.value=r:t.set(e,r),r}var a;"function"==typeof SuppressedError&&SuppressedError;class n extends EventTarget{constructor(e,n,s,o){super(),this.service=e,this.uuid=n,this.properties=s,a.set(this,void 0),this.readValue=async()=>{return await t("readCharacteristic",{device:this.service.device.uuid,service:this.service.uuid,characteristic:this.uuid,instance:r(this,a,"f")}),e=this.value,new DataView(e.buffer.slice(0));var e},i(this,a,o,"f"),this.value=null}}a=new WeakMap;class s{constructor(e){this.id=e,this.isEmpty=()=>0===this.targets.length,this.addTarget=(e,t)=>{this.targets.push({name:e,target:t})},this.removeTarget=e=>{this.targets=this.targets.filter((t=>t.name!==e))},this.postMessage=e=>{const t=this.targets.find((t=>t.name===e.type));t&&t.target.dispatchEvent(e)},this.id=e,this.targets=[]}}const o=new class{constructor(){this.addTarget=(e,t,r)=>{let i=this.dispatchers.find((t=>t.id===e));i||(i=new s(e),this.dispatchers.push(i)),i.addTarget(t,r)},this.removeTarget=(e,t)=>{const r=this.dispatchers.find((t=>t.id===e));r&&r.removeTarget(t),r.isEmpty()&&(this.dispatchers=this.dispatchers.filter((t=>t.id!==e)))},this.removeAllTargets=e=>{this.dispatchers=this.dispatchers.filter((t=>t.id!==e))},this.postMessage=(e,t)=>{const r=this.dispatchers.find((t=>t.id===e));r&&r.postMessage(t)},this.dispatchers=[]}};var _;const c=(e,t)=>e+"."+t;_=new WeakMap;const d=new class{constructor(){_.set(this,void 0),this.getDevice=e=>{var t;return null===(t=r(this,_,"f").get(e))||void 0===t?void 0:t.device},this.addDevice=e=>{const t=r(this,_,"f").get(e.uuid);t&&o.removeTarget(t.device.uuid,"gattserverdisconnected"),r(this,_,"f").set(e.uuid,{uuid:e.uuid,device:e,services:new Map})},this.getService=(e,t)=>{var i,a;return null===(a=null===(i=r(this,_,"f").get(e))||void 0===i?void 0:i.services.get(t))||void 0===a?void 0:a.service},this.addService=e=>{const t=r(this,_,"f").get(e.device.uuid);if(!t)throw new ReferenceError(`Device ${e.device.uuid} not found`);t.services.set(e.uuid,{uuid:e.uuid,service:e,characteristics:new Map})},this.getCharacteristic=(e,t,i)=>{var a,n;return null===(n=null===(a=r(this,_,"f").get(e.device.uuid))||void 0===a?void 0:a.services.get(e.uuid))||void 0===n?void 0:n.characteristics.get(c(t,i))},this.addCharacteristic=(e,t,i)=>{var a;const n=null===(a=r(this,_,"f").get(e.device.uuid))||void 0===a?void 0:a.services.get(e.uuid);if(!n)throw new ReferenceError(`Service ${e.uuid} not found`);n.characteristics.set(c(t.uuid,i),t)},this.findCharacteristic=e=>{for(const t of r(this,_,"f").values())for(const r of t.services.values()){const t=r.characteristics.get(e);if(t)return t}},this.updateCharacteristicValue=(e,t)=>{const r=this.findCharacteristic(e);if(!r)throw new ReferenceError(`Characteristic ${e} not found`);r.value=t},i(this,_,new Map,"f")}};var u,l,h;!function(e){e[e.alert_notification=6161]="alert_notification",e[e.automation_io=6165]="automation_io",e[e.battery_service=6159]="battery_service",e[e.blood_pressure=6160]="blood_pressure",e[e.body_composition=6171]="body_composition",e[e.bond_management=6174]="bond_management",e[e.continuous_glucose_monitoring=6175]="continuous_glucose_monitoring",e[e.current_time=6149]="current_time",e[e.cycling_power=6168]="cycling_power",e[e.cycling_speed_and_cadence=6166]="cycling_speed_and_cadence",e[e.device_information=6154]="device_information",e[e.environmental_sensing=6170]="environmental_sensing",e[e.generic_access=6144]="generic_access",e[e.generic_attribute=6145]="generic_attribute",e[e.glucose=6152]="glucose",e[e.health_thermometer=6153]="health_thermometer",e[e.heart_rate=6157]="heart_rate",e[e.human_interface_device=6162]="human_interface_device",e[e.immediate_alert=6146]="immediate_alert",e[e.indoor_positioning=6177]="indoor_positioning",e[e.internet_protocol_support=6176]="internet_protocol_support",e[e.link_loss=6147]="link_loss",e[e.location_and_navigation=6169]="location_and_navigation",e[e.next_dst_change=6151]="next_dst_change",e[e.phone_alert_status=6158]="phone_alert_status",e[e.pulse_oximeter=6178]="pulse_oximeter",e[e.reference_time_update=6150]="reference_time_update",e[e.running_speed_and_cadence=6164]="running_speed_and_cadence",e[e.scan_parameters=6163]="scan_parameters",e[e.tx_power=6148]="tx_power",e[e.user_data=6172]="user_data",e[e.weight_scale=6173]="weight_scale"}(u||(u={})),function(e){e[e.aerobic_heart_rate_lower_limit=10878]="aerobic_heart_rate_lower_limit",e[e.aerobic_heart_rate_upper_limit=10884]="aerobic_heart_rate_upper_limit",e[e.aerobic_threshold=10879]="aerobic_threshold",e[e.age=10880]="age",e[e.aggregate=10842]="aggregate",e[e.alert_category_id=10819]="alert_category_id",e[e.alert_category_id_bit_mask=10818]="alert_category_id_bit_mask",e[e.alert_level=10758]="alert_level",e[e.alert_notification_control_point=10820]="alert_notification_control_point",e[e.alert_status=10815]="alert_status",e[e.altitude=10931]="altitude",e[e.anaerobic_heart_rate_lower_limit=10881]="anaerobic_heart_rate_lower_limit",e[e.anaerobic_heart_rate_upper_limit=10882]="anaerobic_heart_rate_upper_limit",e[e.anaerobic_threshold=10883]="anaerobic_threshold",e[e.analog=10840]="analog",e[e.apparent_wind_direction=10867]="apparent_wind_direction",e[e.apparent_wind_speed=10866]="apparent_wind_speed",e[e["gap.appearance"]=10753]="gap.appearance",e[e.barometric_pressure_trend=10915]="barometric_pressure_trend",e[e.battery_level=10777]="battery_level",e[e.blood_pressure_feature=10825]="blood_pressure_feature",e[e.blood_pressure_measurement=10805]="blood_pressure_measurement",e[e.body_composition_feature=10907]="body_composition_feature",e[e.body_composition_measurement=10908]="body_composition_measurement",e[e.body_sensor_location=10808]="body_sensor_location",e[e.bond_management_control_point=10916]="bond_management_control_point",e[e.bond_management_feature=10917]="bond_management_feature",e[e.boot_keyboard_input_report=10786]="boot_keyboard_input_report",e[e.boot_keyboard_output_report=10802]="boot_keyboard_output_report",e[e.boot_mouse_input_report=10803]="boot_mouse_input_report",e[e["gap.central_address_resolution_support"]=10918]="gap.central_address_resolution_support",e[e.cgm_feature=10920]="cgm_feature",e[e.cgm_measurement=10919]="cgm_measurement",e[e.cgm_session_run_time=10923]="cgm_session_run_time",e[e.cgm_session_start_time=10922]="cgm_session_start_time",e[e.cgm_specific_ops_control_point=10924]="cgm_specific_ops_control_point",e[e.cgm_status=10921]="cgm_status",e[e.csc_feature=10844]="csc_feature",e[e.csc_measurement=10843]="csc_measurement",e[e.current_time=10795]="current_time",e[e.cycling_power_control_point=10854]="cycling_power_control_point",e[e.cycling_power_feature=10853]="cycling_power_feature",e[e.cycling_power_measurement=10851]="cycling_power_measurement",e[e.cycling_power_vector=10852]="cycling_power_vector",e[e.database_change_increment=10905]="database_change_increment",e[e.date_of_birth=10885]="date_of_birth",e[e.date_of_threshold_assessment=10886]="date_of_threshold_assessment",e[e.date_time=10760]="date_time",e[e.day_date_time=10762]="day_date_time",e[e.day_of_week=10761]="day_of_week",e[e.descriptor_value_changed=10877]="descriptor_value_changed",e[e["gap.device_name"]=10752]="gap.device_name",e[e.dew_point=10875]="dew_point",e[e.digital=10838]="digital",e[e.dst_offset=10765]="dst_offset",e[e.elevation=10860]="elevation",e[e.email_address=10887]="email_address",e[e.exact_time_256=10764]="exact_time_256",e[e.fat_burn_heart_rate_lower_limit=10888]="fat_burn_heart_rate_lower_limit",e[e.fat_burn_heart_rate_upper_limit=10889]="fat_burn_heart_rate_upper_limit",e[e.firmware_revision_string=10790]="firmware_revision_string",e[e.first_name=10890]="first_name",e[e.five_zone_heart_rate_limits=10891]="five_zone_heart_rate_limits",e[e.floor_number=10930]="floor_number",e[e.gender=10892]="gender",e[e.glucose_feature=10833]="glucose_feature",e[e.glucose_measurement=10776]="glucose_measurement",e[e.glucose_measurement_context=10804]="glucose_measurement_context",e[e.gust_factor=10868]="gust_factor",e[e.hardware_revision_string=10791]="hardware_revision_string",e[e.heart_rate_control_point=10809]="heart_rate_control_point",e[e.heart_rate_max=10893]="heart_rate_max",e[e.heart_rate_measurement=10807]="heart_rate_measurement",e[e.heat_index=10874]="heat_index",e[e.height=10894]="height",e[e.hid_control_point=10828]="hid_control_point",e[e.hid_information=10826]="hid_information",e[e.hip_circumference=10895]="hip_circumference",e[e.humidity=10863]="humidity",e[e["ieee_11073-20601_regulatory_certification_data_list"]=10794]="ieee_11073-20601_regulatory_certification_data_list",e[e.indoor_positioning_configuration=10925]="indoor_positioning_configuration",e[e.intermediate_blood_pressure=10806]="intermediate_blood_pressure",e[e.intermediate_temperature=10782]="intermediate_temperature",e[e.irradiance=10871]="irradiance",e[e.language=10914]="language",e[e.last_name=10896]="last_name",e[e.latitude=10926]="latitude",e[e.ln_control_point=10859]="ln_control_point",e[e.ln_feature=10858]="ln_feature",e[e["local_east_coordinate.xml"]=10929]="local_east_coordinate.xml",e[e.local_north_coordinate=10928]="local_north_coordinate",e[e.local_time_information=10767]="local_time_information",e[e.location_and_speed=10855]="location_and_speed",e[e.location_name=10933]="location_name",e[e.longitude=10927]="longitude",e[e.magnetic_declination=10796]="magnetic_declination",e[e.magnetic_flux_density_2D=10912]="magnetic_flux_density_2D",e[e.magnetic_flux_density_3D=10913]="magnetic_flux_density_3D",e[e.manufacturer_name_string=10793]="manufacturer_name_string",e[e.maximum_recommended_heart_rate=10897]="maximum_recommended_heart_rate",e[e.measurement_interval=10785]="measurement_interval",e[e.model_number_string=10788]="model_number_string",e[e.navigation=10856]="navigation",e[e.new_alert=10822]="new_alert",e[e["gap.peripheral_preferred_connection_parameters"]=10756]="gap.peripheral_preferred_connection_parameters",e[e["gap.peripheral_privacy_flag"]=10754]="gap.peripheral_privacy_flag",e[e.plx_continuous_measurement=10847]="plx_continuous_measurement",e[e.plx_features=10848]="plx_features",e[e.plx_spot_check_measurement=10846]="plx_spot_check_measurement",e[e.pnp_id=10832]="pnp_id",e[e.pollen_concentration=10869]="pollen_concentration",e[e.position_quality=10857]="position_quality",e[e.pressure=10861]="pressure",e[e.protocol_mode=10830]="protocol_mode",e[e.rainfall=10872]="rainfall",e[e["gap.reconnection_address"]=10755]="gap.reconnection_address",e[e.record_access_control_point=10834]="record_access_control_point",e[e.reference_time_information=10772]="reference_time_information",e[e.report=10829]="report",e[e.report_map=10827]="report_map",e[e.resting_heart_rate=10898]="resting_heart_rate",e[e.ringer_control_point=10816]="ringer_control_point",e[e.ringer_setting=10817]="ringer_setting",e[e.rsc_feature=10836]="rsc_feature",e[e.rsc_measurement=10835]="rsc_measurement",e[e.sc_control_point=10837]="sc_control_point",e[e.scan_interval_window=10831]="scan_interval_window",e[e.scan_refresh=10801]="scan_refresh",e[e.sensor_location=10845]="sensor_location",e[e.serial_number_string=10789]="serial_number_string",e[e["gatt.service_changed"]=10757]="gatt.service_changed",e[e.software_revision_string=10792]="software_revision_string",e[e.sport_type_for_aerobic_and_anaerobic_thresholds=10899]="sport_type_for_aerobic_and_anaerobic_thresholds",e[e.supported_new_alert_category=10823]="supported_new_alert_category",e[e.supported_unread_alert_category=10824]="supported_unread_alert_category",e[e.system_id=10787]="system_id",e[e.temperature=10862]="temperature",e[e.temperature_measurement=10780]="temperature_measurement",e[e.temperature_type=10781]="temperature_type",e[e.three_zone_heart_rate_limits=10900]="three_zone_heart_rate_limits",e[e.time_accuracy=10770]="time_accuracy",e[e.time_source=10771]="time_source",e[e.time_update_control_point=10774]="time_update_control_point",e[e.time_update_state=10775]="time_update_state",e[e.time_with_dst=10769]="time_with_dst",e[e.time_zone=10766]="time_zone",e[e.true_wind_direction=10865]="true_wind_direction",e[e.true_wind_speed=10864]="true_wind_speed",e[e.two_zone_heart_rate_limit=10901]="two_zone_heart_rate_limit",e[e.tx_power_level=10759]="tx_power_level",e[e.uncertainty=10932]="uncertainty",e[e.unread_alert_status=10821]="unread_alert_status",e[e.user_control_point=10911]="user_control_point",e[e.user_index=10906]="user_index",e[e.uv_index=10870]="uv_index",e[e.vo2_max=10902]="vo2_max",e[e.waist_circumference=10903]="waist_circumference",e[e.weight=10904]="weight",e[e.weight_measurement=10909]="weight_measurement",e[e.weight_scale_feature=10910]="weight_scale_feature",e[e.wind_chill=10873]="wind_chill"}(l||(l={})),function(e){e[e["gatt.characteristic_extended_properties"]=10496]="gatt.characteristic_extended_properties",e[e["gatt.characteristic_user_description"]=10497]="gatt.characteristic_user_description",e[e["gatt.client_characteristic_configuration"]=10498]="gatt.client_characteristic_configuration",e[e["gatt.server_characteristic_configuration"]=10499]="gatt.server_characteristic_configuration",e[e["gatt.characteristic_presentation_format"]=10500]="gatt.characteristic_presentation_format",e[e["gatt.characteristic_aggregate_format"]=10501]="gatt.characteristic_aggregate_format",e[e.valid_range=10502]="valid_range",e[e.external_report_reference=10503]="external_report_reference",e[e.report_reference=10504]="report_reference",e[e.number_of_digitals=10505]="number_of_digitals",e[e.value_trigger_setting=10506]="value_trigger_setting",e[e.es_configuration=10507]="es_configuration",e[e.es_measurement=10508]="es_measurement",e[e.es_trigger_setting=10509]="es_trigger_setting",e[e.time_trigger_setting=10510]="time_trigger_setting"}(h||(h={}));const m=e=>("number"==typeof e&&(e=e.toString(16)),(e=e.toLowerCase()).length<=8&&(e=("00000000"+e).slice(-8)+"-0000-1000-8000-00805f9b34fb"),32===e.length&&(e=e.match(/^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/).splice(1).join("-")),e),p={getService:e=>("string"==typeof e&&u[e]&&(e=u[e]),m(e)),getCharacteristic:e=>("string"==typeof e&&l[e]&&(e=l[e]),m(e)),getDescriptor:e=>("string"==typeof e&&h[e]&&(e=h[e]),m(e)),canonicalUUID:m};class g extends EventTarget{constructor(e,r,i){super(),this.GetGATTChildren=async(e,r)=>(await t("discoverCharacteristics",{device:this.device.uuid,service:this.uuid,characteristic:r?p.getCharacteristic(r):null,single:e})).characteristics.map((e=>((e,t,r,i)=>{const a=d.getCharacteristic(e,t,i);if(a)return a;const s=new n(e,t,r,i);return d.addCharacteristic(e,s,i),s})(this,e.uuid,e.properties,e.instance))),this.getCharacteristic=async e=>{if(void 0===e)throw new TypeError("Missing 'characteristic' UUID parameter.");return(await this.GetGATTChildren(!0,e))[0]},this.getCharacteristics=async e=>this.GetGATTChildren(!1,e),this.device=e,this.uuid=r,this.isPrimary=i}}class f{constructor(e){this.connect=async()=>{const e=await t("connect",{uuid:this.device.uuid});return this.connected=e.connected,this},this.disconnect=async()=>{const e=await t("disconnect",{uuid:this.device.uuid});this.connected=!e.disconnected},this.GetGATTChildren=async(e,r)=>(await t("discoverServices",{device:this.device.uuid,service:r?p.getService(r):null,single:e})).services.map((e=>((e,t,r)=>{const i=d.getService(e.uuid,t);if(i)return i;const a=new g(e,t,r);return d.addService(a),a})(this.device,e,!0))),this.getPrimaryService=async e=>{if(void 0===e)throw new TypeError("Missing 'bluetoothServiceUUID' parameter.");return(await this.GetGATTChildren(!0,e))[0]},this.getPrimaryServices=async e=>this.GetGATTChildren(!1,e),this.device=e,this.connected=!1}}class v extends EventTarget{constructor(e,t){super(),this.uuid=e,this.name=t,this.gatt=new f(this),o.addTarget(e,"gattserverdisconnected",this)}}const w=(e,t)=>{const r=new v(e,t);return d.addDevice(r),r};class b extends EventTarget{constructor(){super(),this.onavailabilitychanged=e=>{},this.getAvailability=async()=>(await t("getAvailability")).isAvailable,this.getDevices=async()=>(await t("getDevices")).map((e=>w(e.uuid,e.name))),this.requestDevice=async e=>{const r=await t("requestDevice",{options:e});return w(r.uuid,r.name)},o.addTarget("bluetooth","availabilitychanged",this),this.addEventListener("availabilitychanged",(e=>{this.onavailabilitychanged(e)}))}}const y=e=>new DataView((e=>Uint8Array.from(atob(e),(e=>e.codePointAt(0))))(e).buffer);class x extends Event{constructor(e,t){super(e,t),this.value=null==t?void 0:t.value}}class T{constructor(){this.sendEvent=e=>{if("characteristicvaluechanged"===e.name){const t=y(e.data);d.updateCharacteristicValue(e.id,t);const r=new x(e.name,{value:t});o.postMessage(e.id,r)}else!function(e){const t=new x(e.name,{value:e.data});o.postMessage(e.id,t)}(e)},this.bluetooth=new b}}void 0===navigator.bluetooth&&(globalThis.topaz=new T,navigator.bluetooth=globalThis.topaz.bluetooth),void 0===window.BluetoothUUID&&(globalThis.BluetoothUUID=p,window.BluetoothUUID=globalThis.BluetoothUUID)}();
